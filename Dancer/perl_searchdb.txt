#################################################################
# creating a database and entering data into it via web browser #
#################################################################


To create a Dancer2 web application in Perl that allows users to enter data into a database, you can follow these general steps:

    Install Dancer2 and a database module like DBI and DBD::SQLite (or another database driver of your choice).

$ cpan install Dancer2 DBI DBD::SQLite


Create your Dancer2 application directory and navigate to it.

$ mkdir MyDancerApp
$ cd MyDancerApp

Create a Dancer2 application script (app.pl) with the following content:

# app.pl
use Dancer2;
use Dancer2::Plugin::Database;

# Set up database connection (replace with your database configuration)
set database => 'sqlite:' . setting('appdir') . '/mydatabase.db';

# Define routes
get '/' => sub {
    # Display a form to enter data
    template 'index';
};

post '/submit' => sub {
    # Receive form data and insert into the database
    my $name = param('name');
    my $email = param('email');

    database->quick_insert('mytable', { name => $name, email => $email });

    redirect '/';
};

start;

Create a views directory inside your application directory, and inside it, create a file named index.tt with the following content:

<!-- views/index.tt -->
<html>
<head>
    <title>Enter Data</title>
</head>
<body>
    <h1>Enter Data</h1>
    <form action="/submit" method="post">
        <label for="name">Name:</label>
        <input type="text" name="name" required><br>
        <label for="email">Email:</label>
        <input type="email" name="email" required><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


Run your Dancer2 application

$ plackup app.pl

######################################################################################################
# creating a simple web interface with a search feature for an SQLite database using Perl and Dancer #
######################################################################################################

Now, let's create a simple Dancer web application. Below is a basic example with a search form and displaying results:

Create the Dancer App:
Create a file named app.pl:

# app.pl

use Dancer;

set 'template' => 'template_toolkit';

get '/' => sub {
    template 'index';
};

post '/search' => sub {
    my $search_term = params->{'search_term'};
    my $results     = search_database($search_term);
    template 'results', { results => $results, search_term => $search_term };
};

sub search_database {
    my ($search_term) = @_;

    # Perform SQLite database search here
    # Replace the following line with your SQLite database query
    my $results = ["Result 1", "Result 2", "Result 3"];

    return $results;
}

start;


# Create the Templates:

# Create a folder named views and within it, create two files: index.tt and results.tt.

views/index.tt:

<!-- views/index.tt -->

<html>
<head>
    <title>SQLite Search</title>
</head>
<body>
    <h1>SQLite Database Search</h1>
    <form action="/search" method="post">
        <label for="search_term">Search Term:</label>
        <input type="text" name="search_term" required>
        <button type="submit">Search</button>
    </form>
</body>
</html>
views/results.tt:

html
Copy code
<!-- views/results.tt -->

<html>
<head>
    <title>Search Results</title>
</head>
<body>
    <h1>Search Results for "<%= $search_term %>"</h1>
    <ul>
        % foreach my $result (@$results) {
            <li><%= $result %></li>
        % }
    </ul>
</body>
</html>

# Run the Dancer App:

# Save all the files, and in the terminal, run:

perl app.pl

# Open a web browser and navigate to http://localhost:3000. You should see the search form

###############################
# SQLite Database Integration #
###############################

# Modify the search_database subroutine in app.pl

# Integrate your SQLite database with the search_database subroutine in app.pl



use DBI;

sub search_database {
    my ($search_term) = @_;

    my $dbh = DBI->connect("dbi:SQLite:dbname=your_database.db", "", "", { RaiseError => 1 });

    my $results = $dbh->selectcol_arrayref(
        "SELECT your_column FROM your_table WHERE your_column LIKE ?",
        undef,
        "%$search_term%"
    );

    $dbh->disconnect;

    return $results;
}
Replace placeholders like your_database.db, your_table, and your_column with your actual database information.

This example provides a basic structure for a Dancer web application with a search feature connected to an SQLite database. Customize it according to your specific requirements and database structure.
